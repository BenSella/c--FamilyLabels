// <auto-generated />
using System;
using FamilyLabels.Utils;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FamilyLabels.Migrations
{
    [DbContext(typeof(FamilyDbContext))]
    partial class FamilyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FamilyLabels.Objects.FamilyTree", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FamilyName")
                        .HasColumnType("longtext");

                    b.Property<int?>("Members")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FamilyTrees");
                });

            modelBuilder.Entity("FamilyLabels.Objects.MonthlyExpenses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double?>("Amount")
                        .HasColumnType("double");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Expense")
                        .HasColumnType("longtext");

                    b.Property<int?>("FamilyTreeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FamilyTreeId");

                    b.ToTable("MonthlyExpenses");
                });

            modelBuilder.Entity("FamilyLabels.Objects.MonthlyExpenses", b =>
                {
                    b.HasOne("FamilyLabels.Objects.FamilyTree", null)
                        .WithMany("MonthlyExpenses")
                        .HasForeignKey("FamilyTreeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FamilyLabels.Objects.FamilyTree", b =>
                {
                    b.Navigation("MonthlyExpenses");
                });
#pragma warning restore 612, 618
        }
    }
}
